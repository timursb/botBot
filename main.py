import asyncio
import logging
from aiogram import Bot, Dispatcher, Router, types, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage
from database import add_photo, get_random_photo, clear_photos

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "7801520051:AAHRzF3Zj4U2dH6cxParfjeR0zf46lCfapM"

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())
router = Router()
dp.include_router(router)

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üì∏ –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ")],
        [KeyboardButton(text="üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —Ñ–æ—Ç–æ")],
        [KeyboardButton(text="üõë –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")]
    ],
    resize_keyboard=True
)


# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(Command("start"))
async def send_welcome(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ, –∏ —è –µ–≥–æ —Å–æ—Ö—Ä–∞–Ω—é!", reply_markup=menu_keyboard)


# –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ"
@router.message(F.text == "üì∏ –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ")
async def ask_for_photo(message: Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ, –∏ –æ–Ω–æ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (—Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å user_id)
@router.message(F.photo)
async def save_photo(message: Message):
    file_id = message.photo[-1].file_id
    user_id = message.from_user.id  # –ü–æ–ª—É—á–∞–µ–º user_id
    add_photo(file_id, user_id)
    await message.answer("–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! –¢–µ–ø–µ—Ä—å –æ–Ω–æ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ —Å–ª—É—á–∞–π–Ω–æ–π –≤—ã–¥–∞—á–µ. üì∏")


# –ö–Ω–æ–ø–∫–∞ "–°–ª—É—á–∞–π–Ω–æ–µ —Ñ–æ—Ç–æ"
@router.message(F.text == "üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —Ñ–æ—Ç–æ")
async def send_random_photo(message: Message):
    user_id = message.from_user.id
    file_id = get_random_photo(user_id)

    if file_id:
        await message.answer_photo(file_id, caption="–í–æ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Ñ–æ—Ç–æ –∏–∑ —Ç–≤–æ–∏—Ö —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö! üé≤")
    else:
        await message.answer("–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ. –î–æ–±–∞–≤—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ!")


# –ö–Ω–æ–ø–∫–∞ "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É" (–æ—á–∏—â–∞–µ—Ç –±–∞–∑—É)
@router.message(F.text == "üõë –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
async def stop_bot(message: Message):
    clear_photos()
    await message.answer("‚úÖ –í—Å–µ —Ñ–æ—Ç–æ —É–¥–∞–ª–µ–Ω—ã. –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    logging.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())


